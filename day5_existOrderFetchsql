
CREATE TABLE mart_satislar
    (
        urun_id number(10),
        musteri_isim varchar2(50),
        urun_isim varchar2(50)
    );
    CREATE TABLE nisan_satislar
    (
        urun_id number(10),
        musteri_isim varchar2(50),
        urun_isim varchar2(50)
    );
    INSERT INTO mart_satislar VALUES (10, 'Mark', 'Honda');
    INSERT INTO mart_satislar VALUES (10, 'Mark', 'Honda');
    INSERT INTO mart_satislar VALUES (20, 'John', 'Toyota');
    INSERT INTO mart_satislar VALUES (30, 'Amy', 'Ford');
    INSERT INTO mart_satislar VALUES (20, 'Mark', 'Toyota');
    INSERT INTO mart_satislar VALUES (10, 'Adem', 'Honda');
    INSERT INTO mart_satislar VALUES (40, 'John', 'Hyundai');
    INSERT INTO mart_satislar VALUES (20, 'Eddie', 'Toyota');
    
    INSERT INTO nisan_satislar VALUES (10, 'Hasan', 'Honda');
    INSERT INTO nisan_satislar VALUES (10, 'Kemal', 'Honda');
    INSERT INTO nisan_satislar VALUES (20, 'Ayse', 'Toyota');
    INSERT INTO nisan_satislar VALUES (50, 'Yasar', 'Volvo');
    INSERT INTO nisan_satislar VALUES (20, 'Mine', 'Toyota');
    
    select * from mart_satislar;
    select * from nisan_satislar;
    
   -- ORNEK1: MART VE NÝSAN aylarýnda ayný URUN_ID ile satýlan ürünlerin
 -- URUN_ID’lerini listeleyen ve ayný zamanda bu ürünleri MART ayýnda alan
 -- MUSTERI_ISIM 'lerini listeleyen bir sorgu yazýnýz.
 
 select urun_id ,musteri_isim from mart_satislar
 where urun_id in(select urun_id from nisan_satislar
                      where mart_satislar.urun_id=nisan_satislar.urun_id);
 --yukaridaki gibi ayni
 
  select urun_id ,musteri_isim from mart_satislar
 where EXISTS(select urun_id from nisan_satislar
                      where mart_satislar.urun_id=nisan_satislar.urun_id);
                      
 
 --ORNEK2: Her iki ayda da satýlan ürünlerin URUN_ISIM'lerini ve bu ürünleri
 -- NÝSAN ayýnda satýn alan MUSTERI_ISIM'lerini listeleyen bir sorgu yazýnýz.                     
 select urun_isim ,musteri_isim from nisan_satislar
 where EXISTS(select urun_isim from mart_satislar
                      where nisan_satislar.urun_isim=mart_satislar.urun_isim);
 
 --ORNEK3: Her iki ayda da ortak olarak satýlmayan ürünlerin URUN_ISIM'lerini
 -- ve bu ürünleri NÝSAN ayýnda satýn alan MUSTERI_ISIM'lerini listeleyiniz.
 
  select urun_isim ,musteri_isim from nisan_satislar
 where NOT EXISTS(select urun_isim from mart_satislar
                      where nisan_satislar.urun_isim=mart_satislar.urun_isim);
                      
                      
--===============================================================
--===================== IS NULL, IS NOT NULL, COALESCE(kulesk=birleþmek) ========================
  --  IS NULL, ve IS NOT NULL BOOLEAN operatörleridir. Bir ifadenin NULL olup
   -- olmadýðýný kontrol ederler.
--==============================================================================*/
    
    CREATE TABLE insanlar
    (
        ssn CHAR(9),
        isim VARCHAR2(50),
        adres VARCHAR2(50)
    );
    INSERT INTO insanlar VALUES('123456789', 'Ali Can', 'Istanbul');
    INSERT INTO insanlar VALUES('234567890', 'Veli Cem', 'Ankara');
    INSERT INTO insanlar VALUES('345678901', 'Mine Bulut', 'Izmir');
    INSERT INTO insanlar (ssn, adres) VALUES('456789012', 'Bursa');
    INSERT INTO insanlar (ssn, adres) VALUES('567890123', 'Denizli');
    INSERT INTO insanlar (adres) VALUES('Sakarya');
    INSERT INTO insanlar (ssn) VALUES('999111222');
 
 SELECT * FROM insanlar;
 drop table insanlar;
 
 --ornek1) isim  inull olanlari sorgulayiniz
 
 select *from insanlar
 where isim IS NULL;
 
 --ORNEK2)ISIM I NULL OLMAYANLARI SORGULAYINIZ
 select *from insanlar
 where isim IS NOT NULL;
 
 --ORNEK3) ISIM I NULL OLAN KISILERIN ISIM INE NO NAME YAZISII atayiniz
 
 UPDATE insanlar
 SET isim='NO NAME'
 WHERE isim IS NULL;
 SELECT * FROM insanlar;
 
 
 
 /* COALESCE (birleþmek) ise bir fonksiyondur ve içerisindeki parameterelerden NULL olmayan
    ilk ifadeyi döndürür. Eðer aldýðý tüm ifadeler NULL ise NULL döndürürür.
   *** select COALESCE (sütun1,sütun2,...) from tabloAdý;
    Birden fazla null koþuluna göre deðer atamak istiyorsak COALESCE deyimini kullanabiliriz.
    COALESCE aslýnda case mantýðýnda çalýþýr ve birden fazla kolon arasýnda kontrol saðlayabilirsiniz.
    Bir koþul gerçekleþmez ise diðerine bakar, oda gerçekleþmez ise bir sonraki.
    Deyim bitene kadar
   -- CASE
   WHEN (expression1 IS NOT NULL) THEN expression1
   WHEN (expression2 IS NOT NULL) THEN expression2
   ...
   ELSE expressionN
   END  --gibi*/
 SELECT COALESCE (isim,ssn,adres) from insanlar;
 
 
 --ornek  toblodaki butun null degerlerini guzel bir cumlecikle degistirin

 update insanlar
 SET isim= COALESCE (isim,'henuz isim girilmedi),
    adres=COALESCE (adres, 'henuz adres girilmed'),
      ssn= COALESCE (ssn,'no ssn');
  SELECT * FROM insanlar;
 
 /* ================================ ORDER BY  ===================================
   ORDER BY cümleciði bir SORGU deyimi içerisinde belli bir SUTUN’a göre
   SIRALAMA yapmak için kullanýlýr.
   Syntax
   -------
      ORDER BY sutun_adi ASC   -- ARTAN
      ORDER BY sutun_adi DESC  -- AZALAN
========================================= */

CREATE TABLE kisiler
    (
        ssn CHAR(9) PRIMARY KEY,
        isim VARCHAR2(50),
        soyisim VARCHAR2(50),
        maas NUMBER,
        adres VARCHAR2(50)
    );
    INSERT INTO kisiler VALUES(123456789, 'Ali','Can', 3000,'Istanbul');
    INSERT INTO kisiler VALUES(234567890, 'Veli','Cem', 2890,'Ankara');
    INSERT INTO kisiler VALUES(345678901, 'Mine','Bulut',4200,'Ankara');
    INSERT INTO kisiler VALUES(256789012, 'Mahmut','Bulut',3150,'Istanbul');
    INSERT INTO kisiler VALUES (344678901, 'Mine','Yasa', 5000,'Ankara');
    INSERT INTO kisiler VALUES (345458901, 'Veli','Yilmaz',7000,'Istanbul');
    SELECT * FROM kisiler;
/* ----------------------------------------------------------------------------
  ORNEK1: kisiler tablosunu adres'e göre sýralayarak sorgulayýnýz.
 -----------------------------------------------------------------------------*/
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 